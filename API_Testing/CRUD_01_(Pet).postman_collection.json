{
	"info": {
		"_postman_id": "f03ce674-b3ca-428d-bf5e-38de7e39007b",
		"name": "CRUD_01_(Pet)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24172906"
	},
	"item": [
		{
			"name": "Find pet by ID 66777",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "api_key",
							"type": "string"
						},
						{
							"key": "value",
							"value": "<API Key>",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "{{baseUrl}}/pet/:petId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						":petId"
					],
					"variable": [
						{
							"key": "petId",
							"value": "66777",
							"description": "(Required) ID of pet to return"
						}
					]
				},
				"description": "Returns a single pet"
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "api_key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "-53415259",
									"description": "(Required) ID of pet to return"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"eu\",\n    \"ad reprehenderit sit deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 9084164,\n      \"name\": \"et Ut\"\n    },\n    {\n      \"id\": 54307765,\n      \"name\": \"culpa do anim\"\n    }\n  ],\n  \"status\": \"pending\"\n}"
				},
				{
					"name": "Invalid ID supplied",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "api_key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "-53415259",
									"description": "(Required) ID of pet to return"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Pet not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "api_key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "-53415259",
									"description": "(Required) ID of pet to return"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Add a new pet to the store id 66777",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Queen\",\n  \"photoUrls\": [\n    \"https://www.belanta.vet/vet-blog/wp-content/uploads/2019/05/1-17.jpg\",\n    \"Lorem ut adipisicing officia non\"\n  ],\n  \"id\": 66777,\n  \"category\": {\n    \"id\": 7722776677,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 47549878,\n      \"name\": \"Her Majesty\"\n    },\n    {\n      \"id\": 47549879,\n      \"name\": \"Princess\"\n    }\n  ],\n  \"status\": \"pending\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": [
				{
					"name": "Invalid input",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Add a new pet - IF ... ELSE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"// Проверка имени питомца заданному имени “Queen”",
							"if (pm.expect(jsonData.name).to.eql(\"Queen\")){",
							"    console.log(\"Питомец королевских кровей\")",
							"};",
							"// Проверка, что Питомец имеет фото»",
							"if(pm.expect(jsonData.photoUrls[0]).to.eql('https://www.belanta.vet/vet-blog/wp-content/uploads/2019/05/1-17.jpg')){",
							"    console.log(\"У питомца есть фото\")",
							"};",
							"",
							"if (pm.response.to.have.status(200)){",
							"pm.test(\"ID = 66777\", function (){",
							"    pm.expect(jsonData.id).to.eql(66777)",
							"    console.log(\"ID = 66777\")",
							"})",
							"};",
							"",
							"if(pm.response.code === 200){",
							"    pm.test(\"category, name = Beautiful Dogs\", function (){",
							"        pm.expect(jsonData.category.name).to.eql(\"Beautiful Dogs\")",
							"        console.log(\"Питомец в категории красивых\")",
							"    })",
							"};",
							"    if(pm.response.code === 200){",
							"    pm.test(\"Проверка Наличия имени питомца\", function (){",
							"        pm.expect(jsonData.name).to.be.a('string').and.not.be.null;",
							"        console.log(\"У питомца есть имя -\", jsonData.name)",
							"    });",
							"};",
							"if(pm.response.to.have.status(200)){",
							"    pm.test(\"Проверка Наличия тэга питомца\",function(){",
							"        pm.expect(jsonData.tags[0].name).to.be.a('string').and.not.be.null;",
							"        console.log(\"Тэг питомца -\", jsonData.tags[0].name)",
							"    })",
							"};",
							"var x = jsonData.status",
							"pm.test(\"Проверка статуса питомца\", function(){",
							"",
							"if (x === \"available\"){",
							"    console.log(\"Питомец Доступен = \", jsonData.status)",
							"}else if (x === \"not available\"){",
							"    console.log(\"Питомец НЕдоступен =\", jsonData.status)",
							"}else {",
							"   console.log(\"Проверь статус питомца!!!\")",
							"}",
							"});",
							"",
							"console.log(jsonData);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Queen\",\n  \"photoUrls\": [\n    \"https://www.belanta.vet/vet-blog/wp-content/uploads/2019/05/1-17.jpg\",\n    \"Lorem ut adipisicing officia non\"\n  ],\n  \"id\": 66777,\n  \"category\": {\n    \"id\": 7722776677,\n    \"name\": \"Beautiful Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 47549878,\n      \"name\": \"Her Majesty\"\n    },\n    {\n      \"id\": 47549879,\n      \"name\": \"Princess\"\n    }\n  ],\n  \"status\": \"available\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": [
				{
					"name": "Invalid input",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Add a new pet - Цикл while",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"/* ",
							"bugs = 0;",
							"while (bugs < 5) {",
							"console.log(\"Bug # \" + bugs + \"!\");",
							"bugs++",
							"}",
							"*/",
							"",
							"var jsonData = pm.response.json();",
							"console.log(jsonData.tags[0].name)",
							"// Отладочный тест",
							"pm.test(\"Проверка что имя  - Her Majesty\", function(){",
							"    pm.expect(jsonData.tags[0].name).to.eql(\"Her Majesty\")",
							"    console.log(jsonData.tags[0].name);",
							"})",
							"",
							"nameTags = 0;",
							"while (nameTags < jsonData.tags.length){",
							"    pm.test(\"Проверка что имя = Princess у элемента массива №\" + nameTags, function(){",
							"    pm.expect(jsonData.tags[nameTags].name).to.eql(\"Princess\")",
							"    console.log(\"Массив под № \" + nameTags + \" имеет значение \" + jsonData.tags[nameTags].name);",
							"});",
							"nameTags++",
							"}",
							"",
							"",
							"// Делаем сравниваемые значения Х и Y переменными, Y будет глобальной переменной",
							"pm.globals.set(\"name\", \"Her Majesty\");",
							"// Обнуляем переменную «nameTags». ТК данная переменная уже была больше длины массива при первом тестировании то следующие тесты не будут работать.",
							"nameTags = 0;",
							"while (nameTags < jsonData.tags.length){",
							"    pm.test(\"Проверка что имя = Her Majesty у элемента массива №\" + nameTags, function(){",
							"    pm.expect(jsonData.tags[nameTags].name).to.eql(pm.globals.get(\"name\"))",
							"    console.log(\"Массив под № \" + nameTags + \" имеет значение \" + jsonData.tags[nameTags].name);",
							"});",
							"nameTags++",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Queen\",\n  \"photoUrls\": [\n    \"https://www.belanta.vet/vet-blog/wp-content/uploads/2019/05/1-17.jpg\",\n    \"Lorem ut adipisicing officia non\"\n  ],\n  \"id\": 66777,\n  \"category\": {\n    \"id\": 7722776677,\n    \"name\": \"Beautiful Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 10,\n      \"name\": \"Her Majesty\"\n    },\n    {\n      \"id\": 11,\n      \"name\": \"Princess\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Princess\"\n    },\n    {\n      \"id\": 13,\n      \"name\": \"Her Majesty\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Princess\"\n    }\n  ],\n  \"status\": \"available\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": [
				{
					"name": "Invalid input",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Add a new pet - Цикл FOR",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"/*",
							"for (i = 0; i < 3; i++){",
							"    console.log(\"Bug\")",
							"}",
							"*/",
							"var jsonData = pm.response.json();",
							"",
							"// Отладочный тест",
							"pm.test(\"Проверка что имя  - Her Majesty\", function(){",
							"    pm.expect(jsonData.tags[0].name).to.eql(\"Her Majesty\")",
							"    console.log(jsonData.tags[0].name);",
							"});",
							"",
							"for(i = 0; i < jsonData.tags.length; i++){",
							"    pm.test(\"Проверка что имя  - Princess\", function() {",
							"        pm.expect(jsonData.tags[i].name).to.eql(\"Princess\")",
							"        console.log(\"Массив под № \" + i + \" имеет значение \" + jsonData.tags[i].name);",
							"",
							"    })",
							"}",
							"",
							"// Делаем сравниваемые значения Х и Y переменными, Y будет глобальной переменной",
							"pm.globals.set(\"name\", \"Her Majesty\");",
							"",
							"for(i = 0; i < jsonData.tags.length; i++){",
							"    pm.test(\"Проверка что имя = Her Majesty у элемента массива №\" + i, function(){",
							"    pm.expect(jsonData.tags[i].name).to.eql(pm.globals.get(\"name\"))",
							"    console.log(\"Массив под № \" + i + \" имеет значение \" + jsonData.tags[i].name);",
							"});",
							"}",
							"// Этот тест проверяет имеются в массива имена помимо Her Majesty & Princess",
							"for(i = 0; i < jsonData.tags.length; i++){",
							"    pm.test(\"Какие есть еще имена в массиве tags\", function(){",
							"        pm.expect(jsonData.tags[i].name).not.eql(\"Princess\") || not.eql(\"Her Majesty\")",
							"        console.log(\"В массиве под № \" + i + \" имеется другое имя - \" + jsonData.tags[i].name);",
							"    })",
							"};",
							"",
							"for (i = 0; i < jsonData.tags.length; i = i + 4){",
							"    console.log(jsonData.tags[i].id);",
							"};",
							"",
							"",
							"for(i = 0; i < jsonData.tags.length; i++){",
							"        if(pm.expect(jsonData.tags[i].name).to.eql(\"Her Majesty\")){ ",
							"        return console.log(\"Массив с № \" + i + \" имеет имя \" + jsonData.tags[i].name);",
							"        } else if (pm.expect(jsonData.tags[i].name).to.eql(\"Princess\")){",
							"          return console.log(\"Массив с № \" + i + \" имеет имя \" + jsonData.tags[i].name); ",
							"        }",
							"      else{",
							"         return console.log(jsonData.tags[i].id)",
							"      }",
							"     ",
							"};",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Queen\",\n  \"photoUrls\": [\n    \"https://www.belanta.vet/vet-blog/wp-content/uploads/2019/05/1-17.jpg\",\n    \"Lorem ut adipisicing officia non\"\n  ],\n  \"id\": 66777,\n  \"category\": {\n    \"id\": 7722776677,\n    \"name\": \"Beautiful Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 10,\n      \"name\": \"Her Majesty\"\n    },\n    {\n      \"id\": 11,\n      \"name\": \"Princess\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Princess\"\n    },\n    {\n      \"id\": 13,\n      \"name\": \"Her Majesty\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Princess\"\n    },\n    {\n      \"id\": 15,\n      \"name\": \"Princess\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Her Majesty\"\n    },\n    {\n      \"id\": 17,\n      \"name\": \"Princess\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Her Majesty\"\n    },\n    {\n      \"id\": 19,\n      \"name\": \"Prince Of Danish\"\n    }\n  ],\n  \"status\": \"available\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": [
				{
					"name": "Invalid input",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Add a new pet - Цикл forEach",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"// Работа с массивом с использованием Лямбда выражением / Стрелочной функцией",
							"jsonData.tags.forEach(i => console.log(i.name));",
							"// Просто разделитель для наглядности",
							"console.log(\"XXXXXXXXXXXXXXXXXXXXXXXX\")",
							"//Работа с массивом с использованием анонимной Функфии",
							"jsonData.tags.forEach(function(i) {console.log(i)})",
							"",
							"// Просто разделитель для наглядности",
							"console.log(\"XXXXXXXXXXXXXXXXXXXXXXXX\")",
							"// Создаем свою функцию, которая возвращает каждый элемент массива. И обрабатывает  от 1 до 3 аргументов массива (item – значения, index – индекс массива, arr - видоизменяет объект массива  )",
							"",
							"function myFunction(item, index, arr){",
							"    arr[index] = item.name + \"(Вносим изменения)\"",
							"    console.log(\"Элемент массива с индексом [\" + index + \"] Имеет значения\", item, arr[index]);",
							"    // console.log(index);",
							"}",
							"// Обращаемся к массиву tags и через myFunction выводим его элементы (индекс массива и его значения)",
							"jsonData.tags.forEach(myFunction);",
							"",
							"console.log(\"XXXXXXXXXXXXXXXXXXXXXXXX\")",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Queen\",\n  \"photoUrls\": [\n    \"https://www.belanta.vet/vet-blog/wp-content/uploads/2019/05/1-17.jpg\",\n    \"Lorem ut adipisicing officia non\"\n  ],\n  \"id\": 66777,\n  \"category\": {\n    \"id\": 7722776677,\n    \"name\": \"Beautiful Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 10,\n      \"name\": \"Her Majesty\"\n    },\n    {\n      \"id\": 11,\n      \"name\": \"Princess\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Princess\"\n    },\n    {\n      \"id\": 13,\n      \"name\": \"Her Majesty\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Princess\"\n    },\n    {\n      \"id\": 15,\n      \"name\": \"Princess\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Her Majesty\"\n    },\n    {\n      \"id\": 17,\n      \"name\": \"Princess\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Her Majesty\"\n    },\n    {\n      \"id\": 19,\n      \"name\": \"Prince Of Danish\"\n    }\n  ],\n  \"status\": \"available\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": [
				{
					"name": "Invalid input",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Find pet by ID 66777 after add",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Достаем все переменны json",
							"var jsonData = pm.response.json();",
							"// Создаем переменную которая = элементу json с ключом - status",
							"test1 = jsonData.status",
							"// Выводим на консоль переменную test1",
							"console.log(test1)",
							"// Первый тесть – проверяем что переменная test1 (которая является элементом json - status) равна значению – pending (в ожидании)",
							"pm.test(\"Первый тесть\", function () {",
							"    pm.expect(test1).to.eql(\"pending\");",
							"});",
							"",
							"// Создаем переменную которая = элементу json с ключом – tags, в которой второй элемент массива [0] имеет элемент - name",
							"test2 = jsonData.tags[1].name",
							"// Выводим на консоль переменную test2",
							"console.log(test2)",
							"// Второй тесть – проверяем что переменная test2 (которая является элементом json - tags, в которой второй элемент массива [0] имеет элемент – name) равна значению – Princess",
							"pm.test(\"Второй тесть\", function () {",
							"    pm.expect(test2).to.eql(\"Princess\");",
							"});",
							"",
							"// Третий тест – проверяет соответствие разных переменных объекта, только переменные задается внутри теста, их 3 )))",
							"pm.test(\"Третий тест\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tags[1].name).to.eql(\"Princess\");",
							"    pm.expect(jsonData.name).to.eql(\"Queen\");",
							"    pm.expect(test1).to.eql(\"pending\");",
							"});",
							"",
							"console.log(jsonData);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "api_key",
							"type": "string"
						},
						{
							"key": "value",
							"value": "<API Key>",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/pet/:petId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						":petId"
					],
					"variable": [
						{
							"key": "petId",
							"value": "66777",
							"description": "(Required) ID of pet to return"
						}
					]
				},
				"description": "Returns a single pet"
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "api_key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "-53415259",
									"description": "(Required) ID of pet to return"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"eu\",\n    \"ad reprehenderit sit deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 9084164,\n      \"name\": \"et Ut\"\n    },\n    {\n      \"id\": 54307765,\n      \"name\": \"culpa do anim\"\n    }\n  ],\n  \"status\": \"pending\"\n}"
				},
				{
					"name": "Invalid ID supplied",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "api_key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "-53415259",
									"description": "(Required) ID of pet to return"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Pet not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "api_key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "-53415259",
									"description": "(Required) ID of pet to return"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Find pet by ID 66777 after add",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "66777",
									"description": "(Required) ID of pet to return"
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Finds Pets by tags Her Majesty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/xml"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/pet/findByTags?tags=Her Majesty&tags=Princess",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						"findByTags"
					],
					"query": [
						{
							"key": "tags",
							"value": "Her Majesty",
							"description": "(Required) Tags to filter by"
						},
						{
							"key": "tags",
							"value": "Princess",
							"description": "(Required) Tags to filter by"
						}
					]
				},
				"description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing."
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByTags?tags=exercitation commodo&tags=in",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "exercitation commodo"
								},
								{
									"key": "tags",
									"value": "in"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"enim magna sunt eu\",\n      \"id do sit in\"\n    ],\n    \"id\": -55396922,\n    \"category\": {\n      \"id\": -48875324,\n      \"name\": \"ipsum anim sit ullamco\"\n    },\n    \"tags\": [\n      {\n        \"id\": 97092986,\n        \"name\": \"laborum dolore eiusmod\"\n      },\n      {\n        \"id\": -92826986,\n        \"name\": \"quis ut irure Ut\"\n      }\n    ],\n    \"status\": \"available\"\n  },\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"reprehenderit cillum culpa labore\",\n      \"reprehenderit elit deserunt aliquip\"\n    ],\n    \"id\": 55581827,\n    \"category\": {\n      \"id\": -45693415,\n      \"name\": \"laboris Duis amet\"\n    },\n    \"tags\": [\n      {\n        \"id\": -56141096,\n        \"name\": \"reprehenderit mollit proident\"\n      },\n      {\n        \"id\": 23095091,\n        \"name\": \"commodo id dolore irure\"\n      }\n    ],\n    \"status\": \"pending\"\n  }\n]"
				},
				{
					"name": "Invalid tag value",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByTags?tags=exercitation commodo&tags=in",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "exercitation commodo"
								},
								{
									"key": "tags",
									"value": "in"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Update an existing pet (name,category,1 tags delete)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Queen Queen\",\n  \"photoUrls\": [\n    \"https://www.belanta.vet/vet-blog/wp-content/uploads/2019/05/1-17.jpg\",\n    \"Lorem ut adipisicing officia non\"\n  ],\n  \"id\": 66777,\n  \"category\": {\n    \"id\": 7722776677,\n    \"name\": \"Beautiful Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 47549879,\n      \"name\": \"Princess\"\n    }\n  ],\n  \"status\": \"available\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": [
				{
					"name": "Invalid ID supplied",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Pet not found",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Validation exception",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"status": "Method Not Allowed",
					"code": 405,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Find pet by ID 66777 after PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "api_key",
							"type": "string"
						},
						{
							"key": "value",
							"value": "<API Key>",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "{{baseUrl}}/pet/:petId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						":petId"
					],
					"variable": [
						{
							"key": "petId",
							"value": "66777",
							"description": "(Required) ID of pet to return"
						}
					]
				},
				"description": "Returns a single pet"
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "api_key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "-53415259",
									"description": "(Required) ID of pet to return"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"eu\",\n    \"ad reprehenderit sit deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 9084164,\n      \"name\": \"et Ut\"\n    },\n    {\n      \"id\": 54307765,\n      \"name\": \"culpa do anim\"\n    }\n  ],\n  \"status\": \"pending\"\n}"
				},
				{
					"name": "Invalid ID supplied",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "api_key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "-53415259",
									"description": "(Required) ID of pet to return"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Pet not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "api_key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "-53415259",
									"description": "(Required) ID of pet to return"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Finds Pets by tags Princess",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/xml"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/pet/findByTags?tags=Princess&tags=",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						"findByTags"
					],
					"query": [
						{
							"key": "tags",
							"value": "Princess",
							"description": "(Required) Tags to filter by"
						},
						{
							"key": "tags",
							"value": "",
							"description": "(Required) Tags to filter by"
						}
					]
				},
				"description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing."
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByTags?tags=exercitation commodo&tags=in",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "exercitation commodo"
								},
								{
									"key": "tags",
									"value": "in"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"enim magna sunt eu\",\n      \"id do sit in\"\n    ],\n    \"id\": -55396922,\n    \"category\": {\n      \"id\": -48875324,\n      \"name\": \"ipsum anim sit ullamco\"\n    },\n    \"tags\": [\n      {\n        \"id\": 97092986,\n        \"name\": \"laborum dolore eiusmod\"\n      },\n      {\n        \"id\": -92826986,\n        \"name\": \"quis ut irure Ut\"\n      }\n    ],\n    \"status\": \"available\"\n  },\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"reprehenderit cillum culpa labore\",\n      \"reprehenderit elit deserunt aliquip\"\n    ],\n    \"id\": 55581827,\n    \"category\": {\n      \"id\": -45693415,\n      \"name\": \"laboris Duis amet\"\n    },\n    \"tags\": [\n      {\n        \"id\": -56141096,\n        \"name\": \"reprehenderit mollit proident\"\n      },\n      {\n        \"id\": 23095091,\n        \"name\": \"commodo id dolore irure\"\n      }\n    ],\n    \"status\": \"pending\"\n  }\n]"
				},
				{
					"name": "Invalid tag value",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByTags?tags=exercitation commodo&tags=in",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "exercitation commodo"
								},
								{
									"key": "tags",
									"value": "in"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Deletes a pet Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "api_key",
						"value": "consectetur nulla eu est"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/pet/:petId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						":petId"
					],
					"variable": [
						{
							"key": "petId",
							"value": "66777",
							"description": "(Required) Pet id to delete"
						}
					]
				}
			},
			"response": [
				{
					"name": "Invalid ID supplied",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "api_key",
								"value": "consectetur nulla eu est"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "60123185",
									"description": "(Required) Pet id to delete"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Pet not found",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "api_key",
								"value": "consectetur nulla eu est"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "60123185",
									"description": "(Required) Pet id to delete"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Find pet by ID 66777 after DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "api_key",
							"type": "string"
						},
						{
							"key": "value",
							"value": "<API Key>",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "{{baseUrl}}/pet/:petId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						":petId"
					],
					"variable": [
						{
							"key": "petId",
							"value": "66777",
							"description": "(Required) ID of pet to return"
						}
					]
				},
				"description": "Returns a single pet"
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "api_key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "-53415259",
									"description": "(Required) ID of pet to return"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"eu\",\n    \"ad reprehenderit sit deserunt\"\n  ],\n  \"id\": 10,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"tags\": [\n    {\n      \"id\": 9084164,\n      \"name\": \"et Ut\"\n    },\n    {\n      \"id\": 54307765,\n      \"name\": \"culpa do anim\"\n    }\n  ],\n  \"status\": \"pending\"\n}"
				},
				{
					"name": "Invalid ID supplied",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "api_key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "-53415259",
									"description": "(Required) ID of pet to return"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Pet not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "api_key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "-53415259",
									"description": "(Required) ID of pet to return"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Finds Pets by tags Princess afte DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/xml"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/pet/findByTags?tags=qui&tags=esse ea cupidatat",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						"findByTags"
					],
					"query": [
						{
							"key": "tags",
							"value": "qui",
							"description": "(Required) Tags to filter by"
						},
						{
							"key": "tags",
							"value": "esse ea cupidatat",
							"description": "(Required) Tags to filter by"
						}
					]
				},
				"description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing."
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByTags?tags=exercitation commodo&tags=in",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "exercitation commodo"
								},
								{
									"key": "tags",
									"value": "in"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"enim magna sunt eu\",\n      \"id do sit in\"\n    ],\n    \"id\": -55396922,\n    \"category\": {\n      \"id\": -48875324,\n      \"name\": \"ipsum anim sit ullamco\"\n    },\n    \"tags\": [\n      {\n        \"id\": 97092986,\n        \"name\": \"laborum dolore eiusmod\"\n      },\n      {\n        \"id\": -92826986,\n        \"name\": \"quis ut irure Ut\"\n      }\n    ],\n    \"status\": \"available\"\n  },\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"reprehenderit cillum culpa labore\",\n      \"reprehenderit elit deserunt aliquip\"\n    ],\n    \"id\": 55581827,\n    \"category\": {\n      \"id\": -45693415,\n      \"name\": \"laboris Duis amet\"\n    },\n    \"tags\": [\n      {\n        \"id\": -56141096,\n        \"name\": \"reprehenderit mollit proident\"\n      },\n      {\n        \"id\": 23095091,\n        \"name\": \"commodo id dolore irure\"\n      }\n    ],\n    \"status\": \"pending\"\n  }\n]"
				},
				{
					"name": "Invalid tag value",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByTags?tags=exercitation commodo&tags=in",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "exercitation commodo"
								},
								{
									"key": "tags",
									"value": "in"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://petstore3.swagger.io/api/v3",
			"type": "string"
		}
	]
}